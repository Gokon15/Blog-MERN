import React, {useState} from 'react'import {useDispatch} from 'react-redux'import {useNavigate} from 'react-router-dom'import {createPost} from '../redux/features/post/postSlice'import TextField from "@mui/material/TextField";import Button from "@mui/material/Button";import {useForm} from "react-hook-form";import {useTranslation } from "react-i18next";export const AddPostPage = () => {    const [title, setTitle] = useState('')    const [text, setText] = useState('')    const [image, setImage] = useState('')    const dispatch = useDispatch()    const navigate = useNavigate()    const submitHandler = () => {        try {            const data = new FormData()            data.append('title', title)            data.append('text', text)            data.append('image', image)            dispatch(createPost(data))            navigate('/')        } catch (error) {            console.log(error)        }    }    const clearFormHandler = () => {        setText('')        setTitle('')        setImage('')    }    const imageFormHandler = () => {        setImage('')    }    const {        register,        handleSubmit,        formState: {errors, isValid},    } = useForm({});    const { t } = useTranslation();    return (        <>            <div className={'bg-white mx-10 '}>                <form onSubmit={handleSubmit(submitHandler)}                    className='w-1/3 mx-auto py-10'                >                    <Button variant="contained" component="label">                        {image ? t("changeImage") : t("uploadImage")}                        <input onChange={(e) => setImage(e.target.files[0])} hidden accept="image/*" multiple                               type="file"/>                    </Button>                    {image && (                        <div className={'my-6'}>                            <Button variant="outlined" color="error" onClick={imageFormHandler}>                                {t("deleteImage")}                            </Button>                        </div>                    )}                    <div className='flex object-cover py-2 '>                        {image && (                            <>                                <img src={URL.createObjectURL(image)} alt={image.name}/>                            </>                        )}                    </div>                    <div className={'bg-white rounded my-12'}>                        <TextField                            {...register("title", {required: "This field is required, please enter title"})}                            error={Boolean(errors.title?.message)}                            helperText={errors.title?.message}                            variant="standard"                            placeholder={t("postTitle")}                            label={t("postTitle")}                            multiline                            value={title}                            onChange={(e) => setTitle(e.target.value)}                            fullWidth                        />                    </div>                    <div>                        <TextField                            sx={{                                width: 515,                            }}                            id="outlined-multiline-static"                            label={t("postText")}                            multiline                            {...register("text", {required: "This field is required, please enter text"})}                            error={Boolean(errors.text?.message)}                            helperText={errors.text?.message}                            value={text}                            rows={4}                            onChange={(e) => setText(e.target.value)}                            fullWidth                        />                    </div>                    <div className='flex gap-8 items-center justify-center mt-4'>                        <Button variant="contained" type='submit' disabled={!isValid} >{t("addPost")}</Button>                        <Button variant="outlined" color="error" onClick={clearFormHandler}>                            {t("clearForm")}                        </Button>                    </div>                </form>            </div>        </>    )}